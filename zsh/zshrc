#
export PATH=$PATH:/sbin:/usr/sbin

source ~/.zsh/zsh-vcs-prompt/zshrc.sh

# location of history
export HISTFILE=~/.histfile
# number of lines kept in history
export HISTSIZE=10000
# number of lines saved in the history after logout
export SAVEHIST=10000

# define charset for less
export LESSCHARSET=utf-8

# activate autocd 
setopt autocd 

# eneble ignore history
setopt hist_ignore_space
setopt hist_ignore_dups
setopt extended_history

# emacs style key binding
bindkey -e

# backward delete
bindkey "\e[3~" delete-char
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" end-of-buffer-or-history

unsetopt appendhistory beep extendedglob nomatch notify 

zstyle :compinstall filename "${USER}/.zshrc"

autoload -Uz compinit
compinit

alias ls='ls -F --color=auto' 
alias ll='ls -lh'
alias la='ls -lha'
alias grep='grep --color=auto' 
alias pyhttp='python -m SimpleHTTPServer' 

setopt PROMPT_SUBST

autoload -U colors && colors
autoload -Uz vcs_info
zstyle ':vcs_info:*:prompt:*' enable git
zstyle ':vcs_info:*:prompt:*' check-for-changes true
zstyle ':vcs_info:*:prompt:*' get-revision true
zstyle ':vcs_info:*:prompt:*' stagedstr "*"
zstyle ':vcs_info:*:prompt:*' unstagedstr "*"
zstyle ':vcs_info:*:prompt:*' nvcsformats "%{$fg[blue]%}%d"
zstyle ':vcs_info:git:prompt:*' formats "%{$fg[blue]%}%R%{$fg[cyan]%}/%S %{$fg[cyan]%}[%{$fg[red]%}%b%{$fg[cyan]%}:%{$fg[white]%}%5.5i%{$fg[cyan]%}]%{$fg[blue]%}%{$reset_color%}"

precmd() {
    vcs_info 'prompt'
}

function lprompt {
    ZSH_VCS_PROMPT_ENABLE_CACHING='true'
    PROMPT="%{%(#~$fg[red]~$fg[white])%}╔═|%{$fg[default]%}%{%B%}"'${vcs_info_msg_0_}$(vcs_super_info)'"%{%b%}
%{%(#~$fg[red]~$fg[white])%}╚═%{$fg[default]%}%{$fg[cyan]%}%n%{$fg[green]%}@%{$fg[cyan]%}%m%{$fg[green]%}%#%{$reset_color%} "
}

function rprompt {
    local error="%(?..%{%B%}%{$fg[red]%}Err. %{$fg[red]%}%? %{$fg[grey]%}| %{%b%})"
    local time="%{%B%}%{$fg[green]%}[%{$fg[cyan]%}%T%{$fg[green]%}]%{%b%}"
    RPROMPT="${error}${time}"
}

lprompt
rprompt

if [[ -e ~/.zshcustom ]]; then
    source ~/.zshcustom
fi

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


#emulate sh
